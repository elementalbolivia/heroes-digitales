(function(){
	'use strict';
	angular.module('heroesDigitalesApp')
		.filter('MentorFilter', MentorFilter);
	function MentorFilter(){
		return function(mentors, city, withTeam, skills){
			// Filtrar en base a un hash
			var hashmentors = {};
			// En cada coincidencia que exista con alguno de los parametros
			// del filtro, crear una llave unica en el hash
			// si existe otro con la misma llave, no se repite en hash
			// o se sobreescribe
			for (var i = 0; i < mentors.length; i++) {
				if(mentors[i].has_team == withTeam){
					hashmentors[mentors[i].id] = mentors[i];
				}
				for (var j = 0; j < city.length; j++) {
					if(mentors[i].city.nombre == city[j]) 
						hashmentors[mentors[i].id] = mentors[i];					
				}
				for (var j = 0; j < skills.length; j++) {
					for (var g = 0; g < mentors[i].mentor.skills.length; g++) {
						if(mentors[i].mentor.skills[g].skill_name == skills[j]) {
							hashmentors[mentors[i].id] = mentors[i];						
						}
					}					
				}
				
			}
			var filtered = [];
			for (var i in hashmentors) {
				filtered.push(hashmentors[i]);
			};
			return filtered;
		};
	}
})();
(function(){
	'use strict';
	angular.module('heroesDigitalesApp')
		.filter('StudentFilter', StudentFilter);
	function StudentFilter(){
		return function(students, city, withTeam){
			// Filtrar en base a un hash
			var hashStudents = {};
			// En cada coincidencia que exista con alguno de los parametros
			// del filtro, crear una llave unica en el hash
			// si existe otro con la misma llave, no se repite en hash
			// o se sobreescribe
			for (var i = 0; i < students.length; i++) {
				if(students[i].has_team == withTeam){
					hashStudents[students[i].id] = students[i];
				}
				for (var j = 0; j < city.length; j++) {
					if(students[i].city.nombre == city[j]) 
						hashStudents[students[i].id] = students[i];					
				}
			}
			var filtered = [];
			for (var i in hashStudents) {
				filtered.push(hashStudents[i]);
			};
			return filtered;
		};
	}
})();
(function(){
	'use strict';
	angular.module('heroesDigitalesApp')
		.filter('TeamFilter', TeamFilter);
	function TeamFilter(){
		return function(teams, city, division, category, requestMembers, requestMentors){
			// Filtrar en base a un hash
			var hash = {};
			// En cada coincidencia que exista con alguno de los parametros
			// del filtro, crear una llave unica en el hash
			// si existe otro con la misma llave, no se repite en hash
			// o se sobreescribe
			for (var i = 0; i < teams.length; i++) {
				if((requestMembers && !teams[i].is_full) || (!requestMembers && teams[i].is_full) )
					hash[teams[i].id] = teams[i];
				if((requestMentors && !teams[i].has_mentor) || (!requestMentors && teams[i].has_mentor) )
					hash[teams[i].id] = teams[i];
				for (var j = 0; j < city.length; j++) {
					if(teams[i].city.nombre == city[j] ) 
						hash[teams[i].id] = teams[i];					
				}
				for (var j = 0; j < division.length; j++) {
					if(teams[i].division.nombre == division[j] ) 
						hash[teams[i].id] = teams[i];					
				}
				for (var j = 0; j < category.length; j++) {
					if(teams[i].category.nombre == category[j] ){
						hash[teams[i].id] = teams[i];					
					} 
				}
			}
			var filtered = [];
			for (var i in hash) {
				filtered.push(hash[i]);
			};
			return filtered;
		};
	}
})();